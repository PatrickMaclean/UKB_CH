version 1.0

#need to change docker image in the hla_calling task runtime section

workflow CHIP_processing {
    input {
        File cram_file
        File cram_file_index 
        File CHIP_regions
        File ref_genome         #https://github.com/broadinstitute/gatk/raw/master/src/test/resources/large/Homo_sapiens_assembly38.fasta.gz
        File ref_genome_index   #https://github.com/broadinstitute/gatk/raw/master/src/test/resources/large/Homo_sapiens_assembly38.fasta.gz.fai
        File ref_genome_dict    #https://github.com/broadinstitute/gatk/raw/master/src/test/resources/large/Homo_sapiens_assembly38.dict
        File ref_genome_gzi     #https://github.com/broadinstitute/gatk/raw/master/src/test/resources/large/Homo_sapiens_assembly38.fasta.gz.gzi
    }

    call cram_extract_index { 
        input: cram_file = cram_file, cram_file_index = cram_file_index, CHIP_regions = CHIP_regions, ref_genome = ref_genome, ref_genome_index = ref_genome_index, ref_genome_dict = ref_genome_dict, ref_genome_gzi = ref_genome_gzi
    }

    call mutect2 {
        input: cram_file = cram_extract_index.extracted_regions, cram_file_index = cram_extract_index.extracted_regions_index
    }

    call GetPileupSummaries

    call CalculateContamination

    call FilterMutectCalls



    output {
        File extracted_regions = cram_extract_index.extracted_regions
        File extracted_regions_index = cram_extract_index.extracted_regions_index
    }
  
}

task cram_extract_index {
    
    input {
        File cram_file
        File cram_file_index
        File CHIP_regions
        File ref_genome
        File ref_genome_index
        File ref_genome_dict
        File ref_genome_gzi
        File pon
        File gnomad
    }

    command <<<
        set -x -e -o pipefail
        time samtools view --reference ~{ref_genome} -L ~{CHIP_regions} -C -o extracted_regions.cram ~{cram_file} 
        time samtools index extracted_regions.cram
    >>>

    runtime {
        docker: "dx://UKB_CHIP:/docker/arcas_hla_0.0.1.tar.gz"
        dx_instance_type: "mem1_ssd1_v2_x8"
    }

    output {
        File extracted_regions = "extracted_regions.cram"
        File extracted_regions_index = "extracted_regions.cram.crai"
    }

}

task mutect2 {
    
    input {
        File cram_file
        File cram_file_index
        File CHIP_regions
        File ref_genome
        File ref_genome_index
        File ref_genome_dict
        File ref_genome_gzi
        File pon
        File gnomad
    }

    command <<<
        set -x -e -o pipefail
        gatk --java-options "-Xmx~{command_mem}m" Mutect2 \
            -R ~{ref_genome} \
            $cram_file \
            ~{"--germline-resource " + gnomad} \
            ~{"-pon " + pon} \
            ~{"-L " + CHIP_regions} \
            -O "~{output_vcf}" \
            --f1r2-tar-gz ~{F1R2_counts}
>>>

    runtime {
        docker: "dx://UKB_CHIP:/docker/arcas_hla_0.0.1.tar.gz"
        dx_instance_type: "mem1_ssd1_v2_x8"
    }

    output {
        File mutect_unfiltered_vcf = ~{output_vcf}
        File F1R2_counts = ~{F1R2_counts}
    }

}

task GetPileupSummaries {
    
    input {
        File cram_file
        File cram_file_index
        File CHIP_regions
        File ref_genome
        File ref_genome_index
        File ref_genome_dict
        File ref_genome_gzi
        File pon
        File gnomad
    }

    command <<<
        set -x -e -o pipefail
        gatk --java-options "-Xmx~{command_mem}m" Mutect2 \
            -R ~{ref_genome} \
            $cram_file \
            ~{"--germline-resource " + gnomad} \
            ~{"-pon " + pon} \
            ~{"-L " + CHIP_regions} \
            -O "~{output_vcf}" \
            --f1r2-tar-gz ~{F1R2_counts}
>>>

    runtime {
        docker: "dx://UKB_CHIP:/docker/arcas_hla_0.0.1.tar.gz"
        dx_instance_type: "mem1_ssd1_v2_x8"
    }

    output {
        File mutect_unfiltered_vcf = ~{output_vcf}
        File F1R2_counts = ~{F1R2_counts}
    }

}

